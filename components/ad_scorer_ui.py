"""
üìä AD SCORER UI - Interfaz de An√°lisis y Scoring
"""

import streamlit as st
import sys
from pathlib import Path

sys.path.insert(0, str(Path(__file__).parent.parent))

def show():
    """Muestra la interfaz de scoring"""
    
    st.markdown("## üìä An√°lisis y Scoring de Anuncios")
    
    st.info("""
    **üéØ Eval√∫a la calidad de tus anuncios**
    
    Obt√©n un score de 0-100 y recomendaciones detalladas de mejora.
    """)
    
    # Tabs
    tab1, tab2 = st.tabs(["üìä Analizar Anuncio", "üìà Comparar Anuncios"])
    
    # ========== TAB 1: ANALIZAR ==========
    with tab1:
        st.markdown("### Ingresa tu Anuncio")
        
        # Headlines
        st.markdown("#### üìù Headlines")
        headlines_input = st.text_area(
            "Una por l√≠nea:",
            placeholder="Amarres de Amor Efectivos\nRecupera a Tu Pareja Ya\nBrujer√≠a Profesional",
            height=150,
            key="scorer_headlines"
        )
        
        # Descriptions
        st.markdown("#### üìÑ Descriptions")
        descriptions_input = st.text_area(
            "Una por l√≠nea:",
            placeholder="Amarres de amor con resultados garantizados.\nBruja profesional con experiencia.",
            height=100,
            key="scorer_descriptions"
        )
        
        # Keywords opcionales
        st.markdown("#### üîë Keywords (opcional)")
        keywords_input = st.text_input(
            "Separadas por comas:",
            placeholder="amarres de amor, hechizos, brujer√≠a",
            key="scorer_keywords"
        )
        
        # Bot√≥n de analizar
        if st.button("üìä Analizar Anuncio", type="primary", use_container_width=True):
            headlines = [h.strip() for h in headlines_input.split('\n') if h.strip()]
            descriptions = [d.strip() for d in descriptions_input.split('\n') if d.strip()]
            keywords = [k.strip() for k in keywords_input.split(',') if k.strip()] if keywords_input else None
            
            if not headlines and not descriptions:
                st.error("‚ùå Ingresa al menos headlines o descriptions")
            else:
                with st.spinner("üìä Analizando..."):
                    try:
                        if st.session_state.get('ad_scorer'):
                            from utils.ad_scorer import AdScorer
                            
                            scorer = st.session_state.ad_scorer
                            
                            # Analizar
                            result = scorer.score_ad(
                                headlines=headlines,
                                descriptions=descriptions,
                                keywords=keywords,
                                compare_to_benchmark=True
                            )
                            
                            # Mostrar score general
                            st.markdown("### üéØ Score General")
                            
                            score = result['overall_score']
                            grade = result['grade']
                            
                            col1, col2, col3 = st.columns(3)
                            
                            with col1:
                                st.metric("Score", f"{score:.1f}/100")
                            
                            with col2:
                                st.metric("Calificaci√≥n", grade)
                            
                            with col3:
                                st.metric("Nivel", result['performance_level'])
                            
                            # Barra de progreso
                            st.progress(score / 100)
                            
                            # Scores por categor√≠a
                            st.markdown("### üìä Scores por Categor√≠a")
                            
                            categories = result['category_scores']
                            
                            for category, data in categories.items():
                                col1, col2 = st.columns([3, 1])
                                
                                with col1:
                                    st.markdown(f"**{category.title()}**")
                                    st.progress(data['percentage'] / 100)
                                
                                with col2:
                                    st.metric("", f"{data['score']:.1f}/{data['max']}")
                            
                            # Fortalezas
                            if result['strengths']:
                                st.markdown("### ‚úÖ Fortalezas")
                                for strength in result['strengths']:
                                    st.success(f"‚úì {strength['description']}")
                            
                            # Debilidades
                            if result['weaknesses']:
                                st.markdown("### ‚ö†Ô∏è √Åreas de Mejora")
                                for weakness in result['weaknesses']:
                                    st.warning(f"‚ö† {weakness['description']}")
                            
                            # Recomendaciones
                            st.markdown("### üí° Recomendaciones")
                            for i, rec in enumerate(result['recommendations'], 1):
                                st.info(f"""
                                **{i}. [{rec['priority'].upper()}] {rec['category']}**
                                
                                {rec['recommendation']}
                                
                                *Impacto esperado: {rec['expected_impact']}*
                                """)
                            
                            # Comparaci√≥n con benchmark
                            if result.get('benchmark_comparison'):
                                st.markdown("### üìà Comparaci√≥n con Industria")
                                bench = result['benchmark_comparison']
                                
                                col1, col2, col3 = st.columns(3)
                                
                                with col1:
                                    st.metric(
                                        "Tu Score",
                                        f"{bench['your_score']:.1f}",
                                        f"{bench['difference']:+.1f}"
                                    )
                                
                                with col2:
                                    st.metric(
                                        "Promedio Industria",
                                        f"{bench['industry_average']:.1f}"
                                    )
                                
                                with col3:
                                    st.metric(
                                        "Percentil",
                                        f"Top {100 - bench['percentile']}%"
                                    )
                                
                                st.info(bench['description'])
                            
                            # Actualizar estad√≠sticas
                            st.session_state.stats['analisis_realizados'] += 1
                        
                        else:
                            st.warning("‚ö†Ô∏è Ad Scorer no disponible. Mostrando an√°lisis b√°sico...")
                            
                            st.metric("Score Estimado", "75/100")
                            st.success("‚úÖ Anuncio analizado (modo demo)")
                            st.info("üí° Configura los m√≥dulos para an√°lisis completo")
                    
                    except Exception as e:
                        st.error(f"‚ùå Error: {e}")
    
    # ========== TAB 2: COMPARAR ==========
    with tab2:
        st.markdown("### üìä Comparar Dos Anuncios")
        
        st.info("Compara dos versiones de anuncios lado a lado")
        
        col1, col2 = st.columns(2)
        
        with col1:
            st.markdown("#### Anuncio A")
            headlines_a = st.text_area("Headlines A:", height=100, key="headlines_a")
            descriptions_a = st.text_area("Descriptions A:", height=80, key="descriptions_a")
        
        with col2:
            st.markdown("#### Anuncio B")
            headlines_b = st.text_area("Headlines B:", height=100, key="headlines_b")
            descriptions_b = st.text_area("Descriptions B:", height=80, key="descriptions_b")
        
        if st.button("üîÑ Comparar", type="primary", use_container_width=True):
            st.info("‚è≥ Funcionalidad de comparaci√≥n en desarrollo...")