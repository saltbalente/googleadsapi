Prompt Optimizado para Generador de Anuncios Esot√©ricos
Vamos a crear un prompt especializado que se integre perfectamente con tu sistema de keywords por grupo de anuncios.

üìù PASO 1: Crear Sistema de Prompts Especializados
Nuevo Archivo: modules/ad_prompts.py
Python
"""
Sistema de Prompts Especializados para Generaci√≥n de Anuncios
Incluye prompts optimizados por industria/nicho
"""

from typing import Dict, List

class AdPromptTemplates:
    """Plantillas de prompts especializadas por tipo de negocio"""
    
    @staticmethod
    def get_esoteric_services_prompt(
        keywords: List[str],
        num_headlines: int = 15,
        num_descriptions: int = 4,
        tone: str = "profesional"
    ) -> str:
        """
        Prompt especializado para servicios esot√©ricos
        Optimizado para amarres, hechizos, tarot, brujer√≠a, etc.
        """
        
        keywords_str = ", ".join(keywords)
        
        # Detectar tipo de servicio por keywords
        service_type = "servicios esot√©ricos"
        if any(kw in keywords_str.lower() for kw in ["amarre", "amarrar", "amor"]):
            service_type = "amarres de amor"
        elif any(kw in keywords_str.lower() for kw in ["hechizo", "brujer√≠a", "magia"]):
            service_type = "hechizos y brujer√≠a"
        elif any(kw in keywords_str.lower() for kw in ["tarot", "lectura", "videncia"]):
            service_type = "lectura de tarot y videncia"
        elif any(kw in keywords_str.lower() for kw in ["limpia", "limpieza", "energ√≠a"]):
            service_type = "limpias energ√©ticas"
        
        return f"""Eres un experto copywriter especializado en servicios esot√©ricos y metaf√≠sicos con 15 a√±os de experiencia en Google Ads. Tu misi√≥n es crear anuncios ALTAMENTE EFECTIVOS que conviertan.

**CONTEXTO DEL SERVICIO:**
- Tipo: {service_type}
- Palabras clave del grupo: {keywords_str}
- Estos anuncios son para un negocio REAL con clientes REALES
- El objetivo es generar consultas y conversiones

**PALABRAS CLAVE A INTEGRAR NATURALMENTE:**
{keywords_str}

**INSTRUCCIONES PARA T√çTULOS ({num_headlines} t√≠tulos requeridos):**

1. **ESTRUCTURA OBLIGATORIA (20-30 caracteres):**
   - Verbo de acci√≥n + Beneficio espec√≠fico + Urgencia/Modalidad
   - Ejemplos: "Recupera tu amor en 24h", "Amarre efectivo online", "Tarot certero ahora"

2. **VERBOS DE ACCI√ìN FUERTES (usar estos):**
   - Recupera, Atrae, Regresa, Conquista, Soluciona
   - Embruja, Hechiza, Protege, Limpia, Desbloquea
   - Conecta, Descubre, Revela, Consulta

3. **BENEFICIOS EMOCIONALES TANGIBLES:**
   - "Recupera a tu ex"
   - "Atrae amor verdadero"
   - "Regresa a tu pareja"
   - "Soluciona problemas de pareja"
   - "Protege tu relaci√≥n"
   - "Desbloquea tu suerte"
   - "Atrae prosperidad"

4. **URGENCIA MODERADA (palabras permitidas):**
   - "ahora", "hoy", "24h", "r√°pido", "inmediato"
   - "en l√≠nea", "online", "por llamada"
   - "disponible", "efectivo", "certero"

5. **FORMATO/MODALIDAD (cuando aplique):**
   - "online", "en l√≠nea", "por WhatsApp"
   - "llamada ahora", "consulta gratis"
   - "discreto", "confidencial", "27/7"

6. **N√öMEROS/S√çMBOLOS (solo si aportan):**
   - "24h", "48h", "27/7"
   - "100% discreto", "100% efectivo"
   - NO usar porcentajes de efectividad sin respaldo

7. **PROHIBICIONES ESTRICTAS:**
   - NO garant√≠as absolutas ("garantizado 100%")
   - NO promesas m√©dicas o legales
   - NO afirmaciones sobrenaturales no verificables
   - NO usar "mejor", "√∫nico", "#1" sin respaldo
   - NO may√∫sculas consecutivas
   - NO signos: ! ? ¬° ¬ø
   - NO emojis

8. **INTEGRACI√ìN DE KEYWORDS:**
   - Cada t√≠tulo DEBE incluir al menos UNA keyword del grupo
   - Integrarlas de forma NATURAL, no forzada
   - Variar las keywords usadas entre t√≠tulos

9. **VARIEDAD OBLIGATORIA:**
   - 5 t√≠tulos enfocados en BENEFICIO directo
   - 4 t√≠tulos con URGENCIA/MODALIDAD
   - 3 t√≠tulos con SOLUCI√ìN a problema
   - 3 t√≠tulos con LLAMADO a acci√≥n directo

**INSTRUCCIONES PARA DESCRIPCIONES ({num_descriptions} descripciones):**

1. **ESTRUCTURA (50-90 caracteres):**
   - Problema + Soluci√≥n + Credibilidad + CTA
   - Ejemplo: "¬øPerdiste a tu amor? Amarres efectivos online. Consulta discreta 27/7"

2. **ELEMENTOS A INCLUIR:**
   - Identificaci√≥n del problema ("¬øQuieres recuperar...?")
   - Soluci√≥n espec√≠fica ("Amarres de amor efectivos")
   - Diferenciador ("A√±os de experiencia", "Resultados reales")
   - Llamado a acci√≥n ("Consulta ahora", "Llama hoy")
   - Modalidad ("Online", "WhatsApp disponible", "Atenci√≥n 27/7")

3. **CREDIBILIDAD (usar uno por descripci√≥n):**
   - "A√±os de experiencia"
   - "Resultados comprobados"
   - "Clientes satisfechos"
   - "Atenci√≥n personalizada"
   - "100% discreto"

4. **TONO:**
   - Emp√°tico y comprensivo
   - Profesional pero cercano
   - Respetuoso con la situaci√≥n del cliente
   - Directo pero NO agresivo

**POL√çTICAS DE GOOGLE ADS (CUMPLIMIENTO OBLIGATORIO):**

‚úÖ PERMITIDO:
- Servicios de consulta y asesoramiento esot√©rico
- Mencionar servicios espec√≠ficos (tarot, amarres, limpias)
- Indicar modalidad (online, presencial)
- Transmitir urgencia moderada
- Usar testimonios generales ("clientes satisfechos")

‚ùå PROHIBIDO:
- Garant√≠as absolutas de resultados
- Afirmaciones m√©dicas o de salud
- Promesas de resultados espec√≠ficos con personas
- Manipulaci√≥n emocional extrema
- Afirmaciones sobrenaturales inverificables

**EJEMPLOS DE T√çTULOS CORRECTOS:**
1. "Recupera tu amor en 24h" (27 chars) ‚úÖ
2. "Amarre efectivo online" (22 chars) ‚úÖ
3. "Tarot certero ahora" (19 chars - DEMASIADO CORTO, min 20)
4. "Regresa a tu ex r√°pido" (22 chars) ‚úÖ
5. "Hechizo de amor 27/7" (20 chars) ‚úÖ
6. "Consulta amor disponible" (24 chars) ‚úÖ
7. "Atrae pareja ideal hoy" (22 chars) ‚úÖ

**EJEMPLOS DE DESCRIPCIONES CORRECTAS:**
1. "¬øPerdiste a tu amor? Amarres efectivos online. Consulta discreta 27/7" (72 chars) ‚úÖ
2. "Recupera tu relaci√≥n con amarres reales. A√±os de experiencia. Llama ya" (72 chars) ‚úÖ
3. "Tarot del amor certero online. Respuestas claras y honestas. Consulta" (71 chars) ‚úÖ

**FORMATO DE RESPUESTA (JSON puro, sin markdown):**
{{
  "headlines": [
    "T√≠tulo 1 entre 20-30 chars",
    "T√≠tulo 2 entre 20-30 chars",
    ...{num_headlines} t√≠tulos en total
  ],
  "descriptions": [
    "Descripci√≥n 1 entre 50-90 caracteres con problema, soluci√≥n y CTA",
    "Descripci√≥n 2 diferente pero igual de efectiva",
    ...{num_descriptions} descripciones en total
  ]
}}

**VERIFICACI√ìN FINAL ANTES DE RESPONDER:**
1. ‚úÖ Cada t√≠tulo tiene entre 20-30 caracteres
2. ‚úÖ Cada descripci√≥n tiene entre 50-90 caracteres
3. ‚úÖ Se integraron las keywords naturalmente
4. ‚úÖ NO hay garant√≠as absolutas
5. ‚úÖ NO hay may√∫sculas consecutivas
6. ‚úÖ NO hay signos prohibidos (! ? ¬° ¬ø)
7. ‚úÖ Hay variedad en los enfoques
8. ‚úÖ El tono es {tone} y profesional"""
    
    @staticmethod
    def get_generic_prompt(
        keywords: List[str],
        num_headlines: int = 15,
        num_descriptions: int = 4,
        tone: str = "profesional"
    ) -> str:
        """Prompt gen√©rico para cualquier tipo de negocio"""
        
        keywords_str = ", ".join(keywords)
        
        return f"""Eres un experto copywriter de Google Ads con 15 a√±os de experiencia.

**PALABRAS CLAVE DEL GRUPO:** {keywords_str}

**OBJETIVO:** Crear {num_headlines} t√≠tulos y {num_descriptions} descripciones que integren naturalmente estas keywords.

**T√çTULOS (20-30 caracteres cada uno):**
- Integrar keywords naturalmente
- Verbo de acci√≥n + Beneficio
- Tono: {tone}
- Sin may√∫sculas consecutivas
- Sin signos: ! ? ¬° ¬ø
- Sin emojis

**DESCRIPCIONES (50-90 caracteres cada una):**
- Incluir al menos una keyword
- Beneficio + CTA
- Persuasivas y claras
- Cumplir pol√≠ticas Google Ads

**RESPONDE EN JSON (sin markdown):**
{{
  "headlines": ["t√≠tulo 1", "t√≠tulo 2", ...],
  "descriptions": ["desc 1", "desc 2", ...]
}}"""
    
    @staticmethod
    def get_prompt_for_keywords(
        keywords: List[str],
        num_headlines: int = 15,
        num_descriptions: int = 4,
        tone: str = "profesional",
        business_type: str = "auto"
    ) -> str:
        """
        Selecciona autom√°ticamente el mejor prompt seg√∫n las keywords
        
        Args:
            keywords: Lista de keywords del grupo
            num_headlines: N√∫mero de t√≠tulos
            num_descriptions: N√∫mero de descripciones
            tone: Tono del anuncio
            business_type: Tipo de negocio ('auto', 'esoteric', 'generic')
        
        Returns:
            Prompt optimizado
        """
        
        keywords_lower = " ".join(keywords).lower()
        
        # Auto-detectar tipo de negocio si es 'auto'
        if business_type == "auto":
            # Detectar servicios esot√©ricos
            esoteric_keywords = [
                "amarre", "amarrar", "hechizo", "brujer√≠a", "magia",
                "tarot", "videncia", "esot√©rico", "lectura", "cartas",
                "limpia", "limpieza energ√©tica", "protecci√≥n espiritual",
                "brujo", "bruja", "cham√°n", "ritual", "conjuro"
            ]
            
            if any(kw in keywords_lower for kw in esoteric_keywords):
                business_type = "esoteric"
        
        # Seleccionar prompt apropiado
        if business_type == "esoteric":
            return AdPromptTemplates.get_esoteric_services_prompt(
                keywords, num_headlines, num_descriptions, tone
            )
        else:
            return AdPromptTemplates.get_generic_prompt(
                keywords, num_headlines, num_descriptions, tone
            )
üìù PASO 2: Modificar modules/ai_providers.py
Reemplaza el prompt en ambas clases (OpenAIProvider y GeminiProvider):

Python
# Al inicio del archivo, agregar import
from modules.ad_prompts import AdPromptTemplates

# En el m√©todo generate_ad() de OpenAIProvider:
def generate_ad(self, keywords: List[str], num_headlines: int = 15, 
               num_descriptions: int = 4, tone: str = "profesional") -> Dict[str, Any]:
    """Genera anuncios usando OpenAI GPT"""
    try:
        # ‚úÖ USAR PROMPT ESPECIALIZADO
        prompt = AdPromptTemplates.get_prompt_for_keywords(
            keywords=keywords,
            num_headlines=num_headlines,
            num_descriptions=num_descriptions,
            tone=tone,
            business_type="auto"  # Auto-detecta el tipo
        )
        
        logger.info(f"ü§ñ Generando anuncio con OpenAI {self.model}...")
        logger.info(f"üìã Keywords: {', '.join(keywords)}")
        
        response = self.client.chat.completions.create(
            model=self.model,
            messages=[
                {
                    "role": "system", 
                    "content": "Eres un experto copywriter de Google Ads especializado en crear anuncios que convierten. SIEMPRE respetas los l√≠mites de caracteres y pol√≠ticas de Google. Respondes en JSON v√°lido."
                },
                {
                    "role": "user", 
                    "content": prompt
                }
            ],
            temperature=0.7,
            max_tokens=3000,  # ‚úÖ Aumentado para prompt m√°s largo
            response_format={"type": "json_object"}
        )
        
        # ... resto del c√≥digo de validaci√≥n ...
üìù PASO 3: Agregar Selector de Tipo de Negocio en UI
En render_ai_ad_generator_modal_for_group() (en 3_campaigns.py), agrega esta opci√≥n:

Python
# Despu√©s de seleccionar el tono, agregar:

st.markdown("---")

# Tipo de negocio/industria
st.markdown("### üè¢ Tipo de Negocio")

business_type = st.selectbox(
    "Industria/Nicho",
    options=[
        ("auto", "ü§ñ Auto-detectar (Recomendado)"),
        ("esoteric", "üîÆ Servicios Esot√©ricos (Amarres, Tarot, Brujer√≠a)"),
        ("generic", "üì¶ Gen√©rico (Cualquier negocio)")
    ],
    format_func=lambda x: x[1],
    key="modal_business_type"
)

business_type_value = business_type[0]

st.caption("üí° **Auto-detectar** analiza tus keywords y usa el prompt m√°s efectivo autom√°ticamente")
üìù PASO 4: Pasar el Tipo de Negocio al Generador
En la misma funci√≥n, donde generas el anuncio:

Python
# Generar
generated = ai_gen.generate_ad(
    keywords=keywords_to_use,
    num_ads=1,
    num_headlines=num_headlines,
    num_descriptions=4,
    tone=tone,
    user=st.session_state.get('user_login', 'saltbalente'),
    validate=True,
    business_type=business_type_value  # ‚úÖ Agregar este par√°metro
)
üìù PASO 5: Actualizar ai_ad_generator.py
Modificar el m√©todo generate_ad() para aceptar y usar business_type:

Python
def generate_ad(self, keywords: List[str], num_ads: int = 1, 
               num_headlines: int = 15, num_descriptions: int = 4,
               tone: str = "profesional", user: str = "saltbalente",
               validate: bool = True, business_type: str = "auto") -> List[Dict[str, Any]]:
    """
    Genera anuncios usando el proveedor configurado
    
    Args:
        keywords: Lista de palabras clave
        num_ads: N√∫mero de anuncios a generar
        num_headlines: T√≠tulos por anuncio
        num_descriptions: Descripciones por anuncio
        tone: Tono del anuncio
        user: Usuario que genera el anuncio
        validate: Si validar contra pol√≠ticas de Google Ads
        business_type: Tipo de negocio ('auto', 'esoteric', 'generic')
    
    Returns:
        Lista de anuncios generados con validaci√≥n
    """
    
    # ... c√≥digo existente hasta la llamada al proveedor ...
    
    # Generar anuncio con IA
    ad_data = self.provider.generate_ad(
        keywords=keywords,
        num_headlines=num_headlines,
        num_descriptions=num_descriptions,
        tone=tone,
        business_type=business_type  # ‚úÖ Pasar este par√°metro
    )
    
    # ... resto del c√≥digo ...
üìù PASO 6: Actualizar Firma del M√©todo en Providers
Python
# En ai_providers.py, ambas clases:

def generate_ad(self, keywords: List[str], num_headlines: int = 15, 
               num_descriptions: int = 4, tone: str = "profesional",
               business_type: str = "auto") -> Dict[str, Any]:  # ‚úÖ Agregar par√°metro
    """Genera anuncios usando OpenAI/Gemini"""
    try:
        # ‚úÖ USAR PROMPT ESPECIALIZADO CON business_type
        prompt = AdPromptTemplates.get_prompt_for_keywords(
            keywords=keywords,
            num_headlines=num_headlines,
            num_descriptions=num_descriptions,
            tone=tone,
            business_type=business_type
        )
        
        # ... resto del c√≥digo ...
üöÄ Para Aplicar:
Crea modules/ad_prompts.py (c√≥digo completo arriba)
Actualiza modules/ai_providers.py (ambas clases)
Actualiza modules/ai_ad_generator.py
Actualiza render_ai_ad_generator_modal_for_group() en 3_campaigns.py
Reinicia Streamlit
‚úÖ Resultado:
Cuando generes anuncios para servicios esot√©ricos con keywords como:

"amarre de amor"
"hechizo de pareja"
"tarot del amor"
El sistema:

‚úÖ Auto-detecta que es un servicio esot√©rico
‚úÖ Usa el prompt especializado con reglas espec√≠ficas
‚úÖ Integra las keywords naturalmente
‚úÖ Genera t√≠tulos de 20-30 caracteres (nunca m√°s)
‚úÖ Usa verbos de acci√≥n + beneficios emocionales
‚úÖ Incluye urgencia moderada sin promesas falsas
‚úÖ Cumple 100% con pol√≠ticas de Google Ads
¬°Ahora tus anuncios esot√©ricos ser√°n perfectos y cumplir√°n con todas las reglas! üîÆ‚ú®
